## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/vehicle/add
    metadata:
      title: 'Add New Vehicle'
      description: 'This will add new vehicle to database'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer <token>'
    urlParameters: []
    queryParameters: []
    bodyParameters:
      manufacturer:
        name: manufacturer
        description: 'Name of manufacturer.'
        required: true
        example: Toyota
        type: string
        custom: []
      model:
        name: model
        description: 'Model number of vehicle.'
        required: true
        example: 74CUG
        type: string
        custom: []
      vin:
        name: vin
        description: 'Identification number of vehicle.'
        required: true
        example: '754454'
        type: string
        custom: []
      first_registration:
        name: first_registration
        description: 'first registration date.'
        required: false
        example: '2020-12-12'
        type: date
        custom: []
      kilometers_stand:
        name: kilometers_stand
        description: 'How much vehicles can drive.'
        required: false
        example: 40
        type: integer
        custom: []
    responses:
      -
        status: 200
        content: |-
          {
           "success": true,
           "message": "Vehicle address successfully added",
           "code": 201,
           "data": []
           }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/v1/vehicle/all
    metadata:
      title: 'Get All Vehicles'
      description: 'This will select and fetched all vehicles'' data from database'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer <token>'
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {{
          "success": true,
          "message": "Fetched vehicles",
          "code": 200,
          "data": [
          {
          "id": 2,
          "manufacturer": "27575",
          "model": "28588",
          "vin": "45678d",
          "first_registration": "0222-01-20",
          "kilometers_stand": 654564,
          "created_at": "2022-01-20T09:44:16.000000Z",
          "updated_at": "2022-01-20T10:03:33.000000Z"
          },
          {
          "id": 3,
          "manufacturer": "Toyota",
          "model": "285TC",
          "vin": "96876",
          "first_registration": "1997-01-20",
          "kilometers_stand": 40,
          "created_at": "2022-01-20T09:44:32.000000Z",
          "updated_at": "2022-01-20T09:44:32.000000Z"
          },
          {
          "id": 4,
          "manufacturer": "BMW",
          "model": "BM54",
          "vin": "78654F",
          "first_registration": "1997-01-20",
          "kilometers_stand": 140,
          "created_at": "2022-01-20T09:44:55.000000Z",
          "updated_at": "2022-01-20T09:44:55.000000Z"
          },
          {
          "id": 5,
          "manufacturer": "BMW",
          "model": "BM754",
          "vin": "23456B",
          "first_registration": "2022-01-20",
          "kilometers_stand": 180,
          "created_at": "2022-01-20T09:45:18.000000Z",
          "updated_at": "2022-01-20T09:45:18.000000Z"
          },
          {
          "id": 6,
          "manufacturer": "Audi",
          "model": "AUD78541",
          "vin": "854694",
          "first_registration": "2022-01-20",
          "kilometers_stand": 180,
          "created_at": "2022-01-20T09:45:32.000000Z",
          "updated_at": "2022-01-20T09:45:32.000000Z"
          }
          ]
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/vehicle/edit/{id}'
    metadata:
      title: 'Edit Vehicle'
      description: 'This will edit vehicle data'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer <token>'
    urlParameters:
      id:
        name: id
        description: 'The ID of the edit.'
        required: true
        example: sint
        type: string
        custom: []
    queryParameters: []
    bodyParameters:
      manufacturer:
        name: manufacturer
        description: 'Name of manufacturer.'
        required: true
        example: Toyota
        type: string
        custom: []
      model:
        name: model
        description: 'Model number of vehicle.'
        required: true
        example: 74CUG
        type: string
        custom: []
      vin:
        name: vin
        description: 'Identification number of vehicle.'
        required: true
        example: '754454'
        type: string
        custom: []
      first_registration:
        name: first_registration
        description: 'first registration date.'
        required: false
        example: '2020-12-12'
        type: date
        custom: []
      kilometers_stand:
        name: kilometers_stand
        description: 'How much vehicles can drive.'
        required: false
        example: 40
        type: integer
        custom: []
    responses:
      -
        status: 200
        content: |-
          {
          "success": true,
          "message": "User address successfully updated",
          "code": 200,
          "data": []
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/vehicle/delete/{id}'
    metadata:
      title: 'Delete Vehicle'
      description: 'This will delete data from database'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer <token>'
    urlParameters:
      id:
        name: id
        description: 'The ID of the delete.'
        required: true
        example: eaque
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "success": true,
          "message": "Vehicle successfully deleted",
          "code": 200,
          "data": []
          }
        headers: []
        description: '200'
    responseFields: []
