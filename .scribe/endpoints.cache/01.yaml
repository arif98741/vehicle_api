## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/vehicle/add
    metadata:
      title: 'Neues Fahrzeug hinzufügen'
      description: 'Dadurch wird der Datenbank ein neues Fahrzeug hinzugefügt'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer <token>'
    urlParameters: []
    queryParameters: []
    bodyParameters:
      herstellerin:
        name: herstellerin
        description: 'Name of herstellerin.'
        required: true
        example: Toyota
        type: string
        custom: []
      modell:
        name: modell
        description: 'modell number of vehicle.'
        required: true
        example: 74CUG
        type: string
        custom: []
      fin:
        name: fin
        description: 'Identification number of vehicle.'
        required: true
        example: '754454'
        type: string
        custom: []
      erste_registrierung:
        name: erste_registrierung
        description: 'Date format should be YYYY-mm-dd'
        required: false
        example: '2020-12-12'
        type: date
        custom: []
      kilometerstand:
        name: kilometerstand
        description: 'How much vehicles can drive.'
        required: false
        example: 40
        type: integer
        custom: []
    responses:
      -
        status: 200
        content: |-
          {
           "success": true,
           "message": "Fahrzeugadresse erfolgreich hinzugefügt",
           "code": 201,
           "data": []
           }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/v1/vehicle/all
    metadata:
      title: 'Holen Sie sich alle Fahrzeuge'
      description: 'Dadurch werden alle Fahrzeugdaten aus der Datenbank ausgewählt und abgerufen'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer <token>'
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {{
          "success": true,
          "message": "Abgeholte Fahrzeuge",
          "code": 200,
          "data": [
          {
          "id": 2,
          "herstellerin": "27575",
          "modell": "28588",
          "fin": "45678d",
          "erste_registrierung": "0222-01-20",
          "kilometerstand": 654564,
          "erstellt_am": "2022-01-20T09:44:16.000000Z",
          "aktualisiert_am": "2022-01-20T10:03:33.000000Z"
          },
          {
          "id": 3,
          "herstellerin": "Toyota",
          "modell": "285TC",
          "fin": "96876",
          "erste_registrierung": "1997-01-20",
          "kilometerstand": 40,
          "erstellt_am": "2022-01-20T09:44:32.000000Z",
          "aktualisiert_am": "2022-01-20T09:44:32.000000Z"
          },
          {
          "id": 4,
          "herstellerin": "BMW",
          "modell": "BM54",
          "fin": "78654F",
          "erste_registrierung": "1997-01-20",
          "kilometerstand": 140,
          "erstellt_am": "2022-01-20T09:44:55.000000Z",
          "aktualisiert_am": "2022-01-20T09:44:55.000000Z"
          },
          {
          "id": 5,
          "herstellerin": "BMW",
          "modell": "BM754",
          "fin": "23456B",
          "erste_registrierung": "2022-01-20",
          "kilometerstand": 180,
          "erstellt_am": "2022-01-20T09:45:18.000000Z",
          "aktualisiert_am": "2022-01-20T09:45:18.000000Z"
          },
          {
          "id": 6,
          "herstellerin": "Audi",
          "modell": "AUD78541",
          "fin": "854694",
          "erste_registrierung": "2022-01-20",
          "kilometerstand": 180,
          "erstellt_am": "2022-01-20T09:45:32.000000Z",
          "aktualisiert_am": "2022-01-20T09:45:32.000000Z"
          }
          ]
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/vehicle/view/{id}'
    metadata:
      title: 'Einzelfahrzeug anzeigen'
      description: 'Dies zeigt ein einzelnes Fahrzeug'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer <token>'
    urlParameters:
      id:
        name: id
        description: 'It will be the id of vehicle in database.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "success": true,
          "message": "Fahrzeug abgeholt",
          "code": 200,
          "data": {
          "id": 2,
          "herstellerin": "27575",
          "modell": "28588",
          "fin": "45678d",
          "erste_registrierung": "0222-01-20",
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/vehicle/edit/{id}'
    metadata:
      title: 'Fahrzeug bearbeiten'
      description: 'Dadurch werden Fahrzeugdaten bearbeitet'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer <token>'
    urlParameters:
      id:
        name: id
        description: 'It will be the id of vehicle in database.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters:
      herstellerin:
        name: herstellerin
        description: 'Name of herstellerin.'
        required: true
        example: Toyota
        type: string
        custom: []
      modell:
        name: modell
        description: 'modell number of vehicle.'
        required: true
        example: 74CUG
        type: string
        custom: []
      fin:
        name: fin
        description: 'Identification number of vehicle.'
        required: true
        example: '754454'
        type: string
        custom: []
      erste_registrierung:
        name: erste_registrierung
        description: 'Date format should be YYYY-mm-dd.'
        required: false
        example: '2020-12-12'
        type: date
        custom: []
      kilometerstand:
        name: kilometerstand
        description: 'How much vehicles can drive.'
        required: false
        example: 40
        type: integer
        custom: []
    responses:
      -
        status: 200
        content: |-
          {
          "success": true,
          "message": "Fahrzeug erfolgreich aktualisiert",
          "code": 200,
          "data": []
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/vehicle/delete/{id}'
    metadata:
      title: 'Fahrzeug löschen'
      description: 'Dadurch werden Daten aus der Datenbank gelöscht'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer <token>'
    urlParameters:
      id:
        name: id
        description: 'It will be the id of vehicle in database.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "success": true,
          "message": "Fahrzeug erfolgreich gelöscht",
          "code": 200,
          "data": []
          }
        headers: []
        description: '200'
    responseFields: []
